pipeline {
    agent any
    
    environment {
        environment = 'Sandbox'
        businessGroupId = "99aa1b08-f16d-4bc1-9079-7a06614591bf"
        target = 'Cloudhub-US-East-2'
        mule_env = 'dev'
        replicas = '1'
        vCores = '0.1'
        deploy_name = 'starwars-mike'
    }
    
    tools {
        maven 'MavenMule'
    }
    
    stages {
        stage('Build') {
            steps {
                withCredentials([file(credentialsId: 'maven-settings-file', variable: 'MVN_SETTINGS')]) {
                    sh 'mvn clean package -s ${MVN_SETTINGS}'
                }
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'  // Ejecuta pruebas
            }
        }
        stage("Publish Asset") {
            steps {
                sh "mvn clean deploy -DbusinessGroupId=${env.businessGroupId} -Dmule.env=${env.mule_env}" 
            }
        }
        
        stage('Deploy to CloudHub') {
            steps {
                sh "mvn clean deploy -DmuleDeploy -Denvironment=${env.environment} -DskipTest -DbusinessGroupId=${env.businessGroupId} -Dtarget=${env.target} -Dmule.env=${env.mule_env}  -Dreplicas=${env.replicas} -DvCores=${env.vCores} -Ddeploy.name=${env.deploy_name}"
                /*sh '''
                mvn deploy \
                    -Danypoint.client_id=$ANYPOINT_CLIENT_ID \
                    -Danypoint.client_secret=$ANYPOINT_CLIENT_SECRET \
                    -Denv=$CLOUDHUB_ENV \
                    -s settings.xml
                '''
                withCredentials([file(credentialsId: 'maven-settings-file', variable: 'MVN_SETTINGS')]) {
                    sh 'mvn clean deploy -s ${MVN_SETTINGS}'
                }*/
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline finalizada'
        }
        success {
            echo 'Build exitosa'
        }
        failure {
            echo 'Build fallida'
        }
    }
}
